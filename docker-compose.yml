services:
  grafana:
    image: grafana/grafana
    container_name: grafana
    depends_on:
      - renderer
      - influxdb
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana:/var/lib/grafana
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - TZ=Europe/Berlin
      - GF_INSTALL_PLUGINS=fetzerch-sunandmoon-datasource,grafana-clock-panel
      - GF_DEFAULT_FORCE_MIGRATION=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_SMTP_ENABLED=${GF_SMTP_ENABLED:-false}
      - GF_SMTP_HOST=${GF_SMTP_HOST}
      - GF_SMTP_USER=${GF_SMTP_USER}
      - GF_SMTP_PASSWORD=${GF_SMTP_PASSWORD}
      - GF_SMTP_FROM_ADDRESS=${GF_SMTP_FROM_ADDRESS}
      - GF_RENDERING_SERVER_URL=http://renderer:8081/render
      - GF_RENDERING_CALLBACK_URL=http://grafana:3000/
      - GF_SERVER_DOMAIN=${HOST:-localhost}
      - GF_SERVER_ROOT_URL=http://${HOST:-localhost}:3000
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/var/lib/grafana/dashboards/pv-monitoring.json
    networks:
      - monitoring
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.${HOST}`)"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"

  renderer:
    image: grafana/grafana-image-renderer
    container_name: renderer
    restart: unless-stopped
    expose:
      - 8081
    networks:
      - monitoring
    labels:
      - "traefik.enable=false"

  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    restart: always
    expose:
      - 8086
    ports:
      - "8086:8086"
    volumes:
      - influxdb:/var/lib/influxdb
      - ./influxdb/influxdb-init.iql:/docker-entrypoint-initdb.d/influxdb-init.iql
    environment:
      - INFLUXDB_DB=monitoring
      - TZ=Europe/Berlin
    networks:
      - monitoring
    labels:
      - "traefik.enable=false"

  telegraf:
    image: telegraf
    container_name: telegraf
    restart: unless-stopped
    environment:
      HOST_PROC: /rootfs/proc
      HOST_SYS: /rootfs/sys
      HOST_ETC: /rootfs/etc
      TZ: Europe/Berlin
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys:/rootfs/sys:ro
      - /proc:/rootfs/proc:ro
      - /etc:/rootfs/etc:ro
    depends_on:
      - influxdb
    networks:
      - monitoring
    labels:
      - "traefik.enable=false"

  modbus-proxy:
    image: michbeck100/modbus-proxy
    container_name: modbus-proxy
    volumes:
      - ./modbus-proxy/modbus-proxy.yml:/etc/modbus-proxy.yml
    ports:
      - "5020:502"
    networks:
      - monitoring
    labels:
      - "traefik.enable=false"

  sungather:
    image: michbeck100/sungather:latest
    container_name: sungather
    restart: unless-stopped
    volumes:
      - ./sungather/config.yaml:/config/config.yaml
    environment:
      - TZ=Europe/Berlin
    ports:
      - "8080:8080"
    depends_on:
      - modbus-proxy
    networks:
      - monitoring
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sungather.rule=Host(`sungather.${HOST}`)"
      - "traefik.http.services.sungather.loadbalancer.server.port=8080"

  mosquitto:
    image: eclipse-mosquitto
    container_name: mosquitto
    restart: always
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - mosquitto-data:/mosquitto/data
    networks:
      - monitoring
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mosquitto.rule=Host(`mqtt.${HOST}`)"
      - "traefik.http.services.mosquitto.loadbalancer.server.port=1883"

  evcc:
    command:
      - evcc
    container_name: evcc
    entrypoint:
      - /app/entrypoint.sh
    environment:
      - PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      - TZ=Europe/Berlin
    image: evcc/evcc:latest
    ipc: private
    logging:
      driver: json-file
      options: {}
    ports:
      - "7070:7070"
    volumes:
      - ./evcc/evcc.yaml:/etc/evcc.yaml
    restart: unless-stopped
    working_dir: /app
    depends_on:
      - influxdb
    networks:
      - monitoring
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.evcc.rule=Host(`evcc.${HOST}`)"
      - "traefik.http.services.evcc.loadbalancer.server.port=7070"

  pvforecast:
    container_name: pvforecast
    image: michbeck100/pvforecast
    restart: unless-stopped
    environment:
      - TZ=Europe/Berlin
    volumes:
      - ./pvforecast/config.ini:/pvforecast/config.ini
    depends_on:
      - influxdb
    networks:
      - monitoring

volumes:
  influxdb:
  grafana:
  mosquitto-data:
  iobrokerdata:

networks:
  monitoring:
